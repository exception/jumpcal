// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  username      String?   @unique
  image         String?

  description  String?
  availability Json?   @db.Json
  timezone     String?
  phoneNumber  String?
  calendarLink String?
  dnd          Boolean @default(false)
  layout       Layout  @default(VERTICAL)

  joinedAt  DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  accounts Account[]
  sessions Session[]

  callLog      Call[]        @relation(name: "call_receiver")
  integrations Integration[]
}

enum Layout {
  VERTICAL
  HORIZONTAL
}

enum CallHost {
  ZOOM
  G_CAL
  OTHER
}

enum CallStatus {
  PENDING
  ANSWERED
  MISSED
  REJECTED
}

model Call {
  id String @id @default(cuid())

  hostedOn CallHost
  status   CallStatus @default(PENDING)
  link     String?

  callerName   String
  callerEmail  String
  callerReason String
  countryCode  String?

  createdAt  DateTime  @default(now())
  acceptedAt DateTime?

  target User @relation(name: "call_receiver", fields: [userId], references: [id], onDelete: Cascade)

  userId String

  @@index([userId])
}

enum IntegrationType {
  ZOOM
}

model Integration {
  type IntegrationType

  accessToken  String
  refreshToken String

  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@unique([userId, type])
}
